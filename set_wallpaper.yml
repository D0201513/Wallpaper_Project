---
- name: ü™ü Set Windows Wallpaper via PowerShell API
  hosts: windows
  gather_facts: false

  tasks:
    - name: üìÑ Copy wallpaper image to Windows
      win_copy:
        src: wallpaper.png
        dest: C:\Users\Public\Pictures\wallpaper.png

    - name: üñºÔ∏è Set wallpaper as current user via scheduled task
      win_shell: |
        $imgPath = "C:\Users\Public\Pictures\wallpaper.png"
        $taskName = "SetWallpaperTask"
        $command = @"
Add-Type -TypeDefinition @"
using System;
using System.Runtime.InteropServices;
public static class NativeMethods {
  [DllImport("user32.dll", SetLastError = true)]
  public static extern bool SystemParametersInfo(int uAction, int uParam, string lpvParam, int fuWinIni);
}
"@
[NativeMethods]::SystemParametersInfo(20, 0, '$imgPath', 3)
"@

        $action = New-ScheduledTaskAction -Execute "powershell.exe" -Argument "-NoProfile -WindowStyle Hidden -Command `$command`"
        $principal = New-ScheduledTaskPrincipal -UserId "$env:USERNAME" -LogonType Interactive -RunLevel Highest
        $task = New-ScheduledTask -Action $action -Principal $principal
        Register-ScheduledTask -TaskName $taskName -InputObject $task -Force
        Start-ScheduledTask -TaskName $taskName
        Start-Sleep -Seconds 5
        Unregister-ScheduledTask -TaskName $taskName -Confirm:$false
      args:
        executable: powershell
