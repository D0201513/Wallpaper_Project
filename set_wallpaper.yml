---
- name: 🪟 Set Windows Wallpaper via PowerShell API
  hosts: windows
  gather_facts: false

  tasks:
    - name: 📄 Copy wallpaper image to Windows
      win_copy:
        src: wallpaper.png
        dest: C:\Users\Public\Pictures\wallpaper.png

    - name: 🖼️ Force wallpaper as current user via scheduled task
      win_shell: >
        $imgPath = "C:\Users\Public\Pictures\wallpaper.png";
        $code = @'
        using System;
        using System.Runtime.InteropServices;
        public static class NativeMethods {
          [DllImport("user32.dll", SetLastError = true)]
          public static extern bool SystemParametersInfo(int uAction, int uParam, string lpvParam, int fuWinIni);
        }
        '@;
        Add-Type -TypeDefinition $code;
        [NativeMethods]::SystemParametersInfo(20, 0, $imgPath, 3);

        $taskName = "SetWallpaperTask";
        $action = New-ScheduledTaskAction -Execute "powershell.exe" -Argument "-WindowStyle Hidden -Command `"Add-Type -TypeDefinition '$code'; [NativeMethods]::SystemParametersInfo(20, 0, '$imgPath', 3)`"";
        $principal = New-ScheduledTaskPrincipal -UserId "$env:USERNAME" -LogonType Interactive -RunLevel Highest;
        $task = New-ScheduledTask -Action $action -Principal $principal;
        Register-ScheduledTask -TaskName $taskName -InputObject $task -Force;
        Start-ScheduledTask -TaskName $taskName;
        Start-Sleep -Seconds 5;
        Unregister-ScheduledTask -TaskName $taskName -Confirm:$false;
      args:
        executable: powershell
